// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/int128/kauthproxy/pkg/reverseproxy (interfaces: Interface)

// Package mock_reverseproxy is a generated GoMock package.
package mock_reverseproxy

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reverseproxy "github.com/int128/kauthproxy/pkg/reverseproxy"
	errgroup "golang.org/x/sync/errgroup"
	url "net/url"
	reflect "reflect"
)

// MockInterface is a mock of Interface interface
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// Start mocks base method
func (m *MockInterface) Start(arg0 context.Context, arg1 *errgroup.Group, arg2 reverseproxy.Options) (*url.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Start", arg0, arg1, arg2)
	ret0, _ := ret[0].(*url.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Start indicates an expected call of Start
func (mr *MockInterfaceMockRecorder) Start(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*MockInterface)(nil).Start), arg0, arg1, arg2)
}
