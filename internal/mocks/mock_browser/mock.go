// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/int128/kauthproxy/internal/browser (interfaces: Interface)
//
// Generated by this command:
//
//	mockgen -destination internal/mocks/mock_browser/mock.go github.com/int128/kauthproxy/internal/browser Interface
//

// Package mock_browser is a generated GoMock package.
package mock_browser

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
	isgomock struct{}
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// Open mocks base method.
func (m *MockInterface) Open(url string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Open", url)
	ret0, _ := ret[0].(error)
	return ret0
}

// Open indicates an expected call of Open.
func (mr *MockInterfaceMockRecorder) Open(url any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Open", reflect.TypeOf((*MockInterface)(nil).Open), url)
}
